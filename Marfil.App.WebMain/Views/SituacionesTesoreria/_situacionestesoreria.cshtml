@using Marfil.App.WebMain.Misc
@using Marfil.Dom.Persistencia.Model.FicherosGenerales

@model SituacionesTesoreriaModel
@{
    var isreadonly = ViewData["readonly"] != null ? (bool)ViewData["readonly"] : false;
    var iseditable = ViewData["operacion"] != null && (ViewData["operacion"] == "Edit");
    var isNuevo = !isreadonly && !iseditable;
}

<script src="~/Scripts/Helper/ControllerHelper.js"></script>
<div ng-controller="HelperCtrl4SituacionesTesoreria" ng-init="init('@Url.Action("comprobarInicialCobro","SituacionesTesoreria")', '@Url.Action("comprobarInicialPago","SituacionesTesoreria")')">
    <div class="form-group">
        @Html.LabelFor(f => Model.Cod, new { @class = "control-label col-md-2" })
        <div class="col-md-1">
            @Html.TextBoxFor(f => Model.Cod, isreadonly || iseditable ? (object)new { @aria_label = "codigo", @class = "form-control", @readonly = "readonly" } : (object)new { @class = "form-control", @autofocus = ""})
        </div>
        <div class="col-md-10 col-md-offset-2">
            @Html.ValidationMessageFor(f => Model.Cod, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(f => Model.Descripcion, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(f => Model.Descripcion, isreadonly ? (object)new { @class = "form-control", @autofocus = "", @readonly = "readonly" } : (object)new { @class = "form-control", @autofocus = "" })
            @Html.ValidationMessageFor(f => Model.Descripcion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(f => Model.Descripcion2, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(f => Model.Descripcion2, isreadonly ? (object)new { @class = "form-control", @autofocus = "", @readonly = "readonly" } : (object)new { @class = "form-control", @autofocus = "" })
            @Html.ValidationMessageFor(f => Model.Descripcion2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(f => Model.Valorinicialcobros, new { @class = "control-label col-md-2" })
        <div class="col-md-1">
            @Html.CheckBoxFor(f => Model.Valorinicialcobros, isreadonly ? (object)new { @disabled = "disabled"} : (object)new { })
            @Html.ValidationMessageFor(f => Model.Valorinicialcobros, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(f => Model.Valorinicialpagos, new { @class = "control-label col-md-2" })
        <div class="col-md-1">
            @Html.CheckBoxFor(f => Model.Valorinicialpagos, isreadonly ? (object)new { @disabled = "disabled" } : (object)new { })
            @Html.ValidationMessageFor(f => Model.Valorinicialpagos, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(f => Model.Editable, new { @class = "control-label col-md-2" })
        <div class="col-md-1">
            @Html.CheckBoxFor(f => Model.Editable, isreadonly ? (object)new { @disabled = "disabled" } : (object)new { })
            @Html.ValidationMessageFor(f => Model.Editable, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(f => Model.Remesable, new { @class = "control-label col-md-2" })
        <div class="col-md-1">
            @Html.CheckBoxFor(f => Model.Remesable, isreadonly ? (object)new { @disabled = "disabled" } : (object)new { })
            @Html.ValidationMessageFor(f => Model.Remesable, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(f => Model.Prevision, new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EnumDropDownList("Prevision", Model.Prevision, isreadonly ? (object)new { @disabled = "disabled", @class = "form-control" } : (object)new { @class = "form-control" })
            @Html.ValidationMessageFor(f => Model.Prevision, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(f => Model.Riesgo, new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EnumDropDownList("Riesgo", Model.Riesgo, isreadonly ? (object)new { @disabled = "disabled", @class = "form-control" } : (object)new { @class = "form-control" })
            @Html.ValidationMessageFor(f => Model.Riesgo, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

    @{
        if (isNuevo || iseditable)
        {
            <script src="@Url.Content("~/components/bootbox.js/bootbox.min.js")"></script>
            <script src="@Url.Content("~/Scripts/Model/Misc/VerificaPk.js")"></script>
        }
    }
