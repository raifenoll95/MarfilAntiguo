@using Marfil.App.WebMain.Misc
@using Marfil.Dom.ControlsUI.CampoVerificacion
@using Marfil.Dom.Persistencia.Model.Configuracion
@using Marfil.Dom.Persistencia.Model.Iva
@using Marfil.Dom.Persistencia.ServicesView.Servicios.Campoverificacion
@using Marfil.Inf.ResourcesGlobalization.Textos.Entidades
@model Marfil.Dom.Persistencia.Model.Configuracion.Empresa.EmpresaModel
@{
    bool isreadonly = ViewData["readonly"] != null ? (bool)ViewData["readonly"] : false;
    bool isEdicion = ViewData["operacion"] != null ? (string)ViewData["operacion"] == "Edit" : false;
    var cvejercicios = FCampoverificacion.Instance.GetModel<EjerciciosModel>(WebHelper.ContextService);
}
@{
    if (isEdicion)
    {
        <input type="hidden" name="DigitosCuentas" value="@Model.DigitosCuentas" />
            <input type="hidden" name="NivelCuentas" value="@Model.NivelCuentas" />
    }
}
<h4>@Empresas.LblConfiguracionMonedas</h4>
<div class="form-group">
    @Html.LabelFor(f => Model.FkMonedaBase, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.Partial("CampoverificacionUI", new CampoverificacionModel()
   {
       Name = "FkMonedaBase",
       CampoIdentificador = "Id",
       Url = Url.Action("MonedasApi", "Api"),
       CampoDescripcion = "Descripcion",
       Valor = Model.FkMonedaBase,
       Titulo = "Monedas",
       SoloLectura = isreadonly || isEdicion,
       Obligatorio=true,
       Params = isEdicion ? "": "{ \"todas\":\"true\"}"
   })

       
    </div>
    <div class="col-md-10 col-md-offset-2">
        @Html.ValidationMessageFor(f => Model.FkMonedaBase, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.FkMonedaAdicional, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.Partial("CampoverificacionUI", new CampoverificacionModel()
   {
       Name = "FkMonedaAdicional",
       CampoIdentificador = "Id",
       Url = Url.Action("MonedasApi", "Api"),
       CampoDescripcion = "Descripcion",
       Valor = Model.FkMonedaAdicional,
       Titulo = "Monedas",
       SoloLectura = isreadonly,
       Params = isEdicion ? "" : "{ \"todas\":\"true\"}"
   })

    </div>
    <div class="col-md-10 col-md-offset-2">
        @Html.ValidationMessageFor(f => Model.FkMonedaAdicional, "", new { @class = "text-danger" })
    </div>
</div>

<h4>@Empresas.LblConfiguracionCuentas</h4>
<div class="form-group">
    
    @Html.LabelFor(f => Model.DigitosCuentas, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.DropDownListFor(f => Model.DigitosCuentas, (new[] { "8", "9", "10" }).Select(f => new SelectListItem() { Value = f, Text = f }), isreadonly || isEdicion ? (object)new { @class = "form-control", @autofocus = "", @disabled = "disabled" } : (object)new { @class = "form-control", @autofocus = "" })
        @Html.ValidationMessageFor(f => Model.DigitosCuentas, "", new {@class = "text-danger"})
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.NivelCuentas, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.DropDownListFor(f => Model.NivelCuentas, (new[] {"3", "4", "5"}).Select(f => new SelectListItem() {Value = f, Text = f}), isreadonly || isEdicion ? (object) new {@class = "form-control", @autofocus = "", @disabled = "disabled" } : (object) new {@class = "form-control", @autofocus = ""})
        @Html.ValidationMessageFor(f => Model.NivelCuentas, "", new {@class = "text-danger"})
    </div>
</div>

<h4>@Empresas.LblConfiguracionBalance</h4>

<div class="form-group">
    @Html.LabelFor(f => Model.CuentasAnuales, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.TextBoxFor(f => Model.CuentasAnuales, isreadonly ? (object) new {@class = "form-control", @autofocus = "", @readonly = "readonly"} : (object) new {@class = "form-control", @autofocus = ""})
        @Html.ValidationMessageFor(f => Model.CuentasAnuales, "", new {@class = "text-danger"})
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.CuentasPerdidas, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.TextBoxFor(f => Model.CuentasPerdidas, isreadonly ? (object) new {@class = "form-control", @autofocus = "", @readonly = "readonly"} : (object) new {@class = "form-control", @autofocus = ""})
        @Html.ValidationMessageFor(f => Model.CuentasPerdidas, "", new {@class = "text-danger"})
    </div>
</div>











