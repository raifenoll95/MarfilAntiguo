@using Marfil.App.WebMain.Misc
@using Marfil.Dom.ControlsUI.CampoVerificacion
@using Marfil.Dom.Persistencia.Helpers
@using Marfil.Dom.Persistencia.Model.Iva
@using Marfil.Dom.Persistencia.ServicesView.Servicios.Campoverificacion
@using Marfil.Dom.Persistencia.Model.FicherosGenerales;
@using Marfil.Dom.Persistencia.Model.Configuracion

@model Marfil.Dom.Persistencia.Model.Configuracion.Empresa.EmpresaModel
@{
    bool isreadonly = ViewData["readonly"] != null ? (bool)ViewData["readonly"] : false;
    var cvregimeniva = FCampoverificacion.Instance.GetModel<RegimenIvaModel>(WebHelper.ContextService);
    cvregimeniva.Name = "Fkregimeniva";
    cvregimeniva.Url = Url.Action("RegimenIvaApi", "Api");
    cvregimeniva.CampoDescripcion = "Descripcion";
    cvregimeniva.Valor = Model.Fkregimeniva;
    cvregimeniva.SoloLectura = isreadonly;

    var listatarifasventa = WebHelper.GetApplicationHelper().GetListTarifasBase(TipoFlujo.Venta).Select(f => new SelectListItem() { Value = f.Fktarifa, Text = f.Descripcion }).ToList();
    var listatarifascompra = WebHelper.GetApplicationHelper().GetListTarifasBase(TipoFlujo.Compra).Select(f => new SelectListItem() { Value = f.Fktarifa, Text = f.Descripcion }).ToList();
}

<div class="form-group">
    @Html.LabelFor(f => Model.TipoEmpresa, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(f => Model.TipoEmpresa, WebHelper.GetApplicationHelper().GetListTiposEmpresas().Select(f => new SelectListItem() { Text = f.Descripcion, Value = f.Valor }), isreadonly ? (object)new { @class = "form-control", @autofocus = "", @disabled = "disabled" } : (object)new { @class = "form-control", @autofocus = "" })
        @Html.ValidationMessageFor(f => Model.TipoEmpresa, "", new {@class = "text-danger"})
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.ActividadPrincipal, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.TextBoxFor(f => Model.ActividadPrincipal, isreadonly ? (object) new {@class = "form-control", @autofocus = "", @readonly = "readonly"} : (object) new {@class = "form-control", @autofocus = ""})
        @Html.ValidationMessageFor(f => Model.ActividadPrincipal, "", new {@class = "text-danger"})
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.Cnae, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.TextBoxFor(f => Model.Cnae, isreadonly ? (object) new {@class = "form-control", @autofocus = "", @readonly = "readonly"} : (object) new {@class = "form-control", @autofocus = ""})
        @Html.ValidationMessageFor(f => Model.Cnae, "", new {@class = "text-danger"})
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.Nivel, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.DropDownListFor(f => Model.Nivel, (new[] {"0", "1", "2", "3", "4", "5"}).Select(f => new SelectListItem() {Value = f, Text = f}), isreadonly ? (object) new {@class = "form-control", @autofocus = "", @disabled = "disabled"} : (object) new {@class = "form-control", @autofocus = ""})
        @Html.ValidationMessageFor(f => Model.Nivel, "", new {@class = "text-danger"})
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.Criterioiva, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.EnumDropDownList("Criterioiva", Model.Criterioiva, isreadonly ? (object) new {@class = "form-control", @autofocus = "", @disabled = "disabled"} : (object) new {@class = "form-control", @autofocus = ""})
        @Html.ValidationMessageFor(f => Model.Criterioiva, "", new {@class = "text-danger"})
    </div>
</div>


<div class="form-group">
    @Html.LabelFor(f => Model.Liquidacioniva, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.EnumDropDownList("Liquidacioniva", Model.Liquidacioniva, isreadonly ? (object) new {@class = "form-control", @autofocus = "", @disabled = "disabled"} : (object) new {@class = "form-control", @autofocus = ""})
        @Html.ValidationMessageFor(f => Model.Liquidacioniva, "", new {@class = "text-danger"})
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.Fkregimeniva, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.Partial("CampoverificacionUI", cvregimeniva)
    </div>
    <div class="col-md-10 col-md-offset-2">
        @Html.ValidationMessageFor(f => Model.Fkregimeniva, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.Datosregistrales, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.TextAreaFor(f => Model.Datosregistrales, isreadonly ? (object) new {@class = "form-control", @autofocus = "", @disabled = "disabled"} : (object) new {@class = "form-control", @autofocus = ""})
        @Html.ValidationMessageFor(f => Model.Datosregistrales, "", new {@class = "text-danger"})
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.Fktarifasventas, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.DropDownListFor(f => Model.Fktarifasventas, listatarifasventa, isreadonly ? (object) new {@class = "form-control", @autofocus = "", @disabled = "disabled"} : (object) new {@class = "form-control", @autofocus = ""})
        @Html.ValidationMessageFor(f => Model.Fktarifasventas, "", new {@class = "text-danger"})
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.Fktarifascompras, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(f => Model.Fktarifascompras, listatarifascompra, isreadonly ? (object)new { @class = "form-control", @autofocus = "", @disabled = "disabled" } : (object)new { @class = "form-control", @autofocus = "" })
        @Html.ValidationMessageFor(f => Model.Fktarifascompras, "", new { @class = "text-danger" })
    </div>
</div>