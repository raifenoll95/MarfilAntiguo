@using Resources
@model Marfil.Dom.Persistencia.Model.Configuracion.Empresa.EmpresaModel
@{
    bool isreadonly = ViewData["readonly"] != null ? (bool)ViewData["readonly"] : false;
    bool isEdicion = ViewData["operacion"] != null ? (string)ViewData["operacion"] == "Edit" : false;
}
<div class="form-group">
    @Html.LabelFor(f => Model.Nombre, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(f => Model.Nombre, isreadonly ? (object)new { @class = "form-control", @autofocus = "", @readonly = "readonly" } : (object)new { @class = "form-control", @autofocus = "" })
        @Html.ValidationMessageFor(f => Model.Nombre, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.Razonsocial, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(f => Model.Razonsocial, isreadonly ? (object)new { @class = "form-control", @readonly = "readonly" } : (object)new { @class = "form-control" })
        @Html.ValidationMessageFor(f => Model.Razonsocial, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.Fkpais, new { @class = "control-label col-md-2",@id="LabelFkpais" })
    <div class="col-md-10">
        @Html.DropDownListFor(f => Model.Fkpais, Model.Paises.Select(f => new SelectListItem() {  Text = f.Descripcion, Value = f.Valor }), isreadonly ? (object)new { @aria_label="Pais",@aria_labelledby= "LabelFkpais", @class = "form-control", @id = "FkPais", @onchange = "ValidateNif($(this).val(), $('#Nif').val())", @disabled = "disabled" } : (object)new { @aria_label = "Pais", @aria_labelledby = "LabelFkpais", @class = "form-control", @id = "FkPais", @onchange = "ValidateNif($(this).val(), $('#Nif').val(),'ErrorNif')" })
        @Html.ValidationMessageFor(f => Model.Fkpais, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    
        @{
            Model.Nif.FkpaisControlId = "FkPais";
            Model.Nif.Readonly = isreadonly;
            Model.Nif.Obligatorio = true;
        }
        @Html.EditorFor(f => Model.Nif)
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.Fkplangeneralcontable, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @if (isEdicion)
        {
            @Html.HiddenFor(f => Model.Fkplangeneralcontable)
        }
        @Html.DropDownListFor(f => Model.Fkplangeneralcontable, Model.PlanesGenerales.Select(f => new SelectListItem() {Text = f.Nombre, Value = f.Id.ToString()}), isreadonly || isEdicion ? (object) new {@class = "form-control", @disabled = "disabled"} : (object) new {@class = "form-control"})
        @Html.ValidationMessageFor(f => Model.Fkplangeneralcontable, "", new {@class = "text-danger"})
    </div>
</div>

<h4>@General.LblAdministrador</h4>

<div class="form-group">
    @Html.LabelFor(f => Model.Administrador, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(f => Model.Administrador, isreadonly ? (object)new { @class = "form-control", @readonly = "readonly" } : (object)new { @class = "form-control" })
        @Html.ValidationMessageFor(f => Model.Administrador, "", new {@class = "text-danger"})
    </div>
</div>

<div class="form-group">
    @{
        Model.NifCifAdministrador.FkpaisControlId = "FkPais";
        Model.NifCifAdministrador.Readonly = isreadonly;
        Model.NifCifAdministrador.Obligatorio = true;
    }
    @Html.EditorFor(f => Model.NifCifAdministrador)




</div>
<script>
    $.validator.setDefaults({ ignore: null });
</script>