@using Marfil.App.WebMain.Misc
@using Marfil.Dom.Persistencia.Helpers
@using Marfil.Dom.Persistencia.Model.Configuracion
@using Marfil.Dom.Persistencia.Model.FicherosGenerales
@using Marfil.Dom.Persistencia.ServicesView
@using Marfil.Dom.Persistencia.ServicesView.Servicios
@using Marfil.Dom.Persistencia.ServicesView.Servicios.Campoverificacion
@model Marfil.Dom.Persistencia.Model.Configuracion.EjerciciosModel
@{
    var isreadonly = ViewData["readonly"] != null ? (bool)ViewData["readonly"] : false;
    var iseditable = ViewData["operacion"] != null && (ViewData["operacion"] == "Edit");
    var isNuevo = !isreadonly && !iseditable;

    var ejericciosService = FService.Instance.GetService(typeof(EjerciciosModel), WebHelper.ContextService) as EjerciciosService;
    var listejercicios = ejericciosService.GetEjercicios(Model.Id).Select(f => new SelectListItem() { Value = f.Id.ToString(), Text = f.Descripcioncorta }).ToList();
    listejercicios.Insert(0, new SelectListItem() { Value = null, Text = "" });

    var cvseriecontable = FCampoverificacion.Instance.GetModel<SeriesContablesModel>(WebHelper.ContextService);
}

@Html.HiddenFor(f => Model.Empresa)
@if (isNuevo)
{
   <input type="hidden" name="Id" value="-1" />
}
else
{
    @Html.HiddenFor(f => Model.Id)
}

<div class="form-group">
    @Html.LabelFor(f => Model.Descripcion, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(f => Model.Descripcion, isreadonly ? (object)new { @class = "form-control", @autofocus = "", @readonly = "readonly" } : (object)new { @class = "form-control", @autofocus = "" })
        @Html.ValidationMessageFor(f => Model.Descripcion, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.Descripcioncorta, new {@class = "control-label col-md-2"})
    <div class="col-md-2">
        @Html.TextBoxFor(f => Model.Descripcioncorta, isreadonly ? (object) new {@class = "form-control", @autofocus = "", @readonly = "readonly"} : (object) new {@class = "form-control", @autofocus = ""})

    </div>
    <div class="col-md-10 col-md-offset-2">
        @Html.ValidationMessageFor(f => Model.Descripcioncorta, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.Desde, new {@class = "control-label col-md-2"})
    <div class="col-md-4">
        @Html.EditorFor(f => Model.Desde)
    </div>
    @Html.LabelFor(f => Model.Hasta, new {@class = "control-label col-md-2"})
    <div class="col-md-4">
        @Html.EditorFor(f => Model.Hasta)
    </div>

    <div class="col-md-12"></div>
    <div class="col-md-4 col-md-offset-2">
        @Html.ValidationMessageFor(f => Model.Desde, "", new {@class = "text-danger"})
    </div>
    <div class="col-md-4 col-md-offset-2">
        @Html.ValidationMessageFor(f => Model.Hasta, "", new {@class = "text-danger"})
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.Estado, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
       @Html.EnumDropDownListFor(f => Model.Estado, isreadonly ? (object)new { @class = "form-control", @readonly = "readonly" } : (object)new { @class = "form-control" })
        @Html.ValidationMessageFor(f => Model.Estado, "", new {@class = "text-danger"})
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.Contabilidadcerradahasta, new {@class = "control-label col-md-2"})
    <div class="col-md-4">
        @Html.TextBoxFor(f => Model.Contabilidadcerradahasta, new { @class = "form-control", @readonly="readonly" })
    </div>
    @Html.LabelFor(f => Model.Registroivacerradohasta, new {@class = "control-label col-md-2"})
    <div class="col-md-4">
        @Html.TextBoxFor(f => Model.Registroivacerradohasta,  new { @class = "form-control", @readonly = "readonly" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.Fkejercicios, new { @class = "control-label col-md-2" })
    <div class="col-md-4">
        @Html.DropDownListFor(f => Model.Fkejercicios, listejercicios, isreadonly ? (object) new {@class = "form-control", @disabled = "disabled"} : (object) new {@class = "form-control"})
    </div>


    @Html.LabelFor(f => Model.Criterioiva, new { @class = "control-label col-md-2" })
    <div class="col-md-4">
        @Html.EnumDropDownListFor(f => Model.CustomCriterioIva, isreadonly ? (object)new { @class = "form-control", @readonly = "readonly", @aria_label = "Criterio IVA" } : (object)new { @class = "form-control", @aria_label = "Criterio IVA" })
        @Html.ValidationMessageFor(f => Model.Criterioiva, "", new { @class = "text-danger" })
    </div>


    <div class="col-md-12"></div>
    <div class="col-md-10 col-md-offset-2">
        @Html.ValidationMessageFor(f => Model.Fkejercicios, "", new { @class = "text-danger" })
    </div>

</div>

<div class="col-md-12"></div>
<div class="form-group">
    @Html.LabelFor(f => Model.FkseriescontablesAST, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @{
            cvseriecontable.Name = "FkseriescontablesAST";
            cvseriecontable.Url = Url.Action("SeriesContablesApi", "Api");
            cvseriecontable.Valor = Model.FkseriescontablesAST;
            cvseriecontable.Params = "{\"tipodocumento\":\"AST\"}";
            cvseriecontable.SoloLectura = false;
            cvseriecontable.Autofocus = true;
            cvseriecontable.Obligatorio = false;
            cvseriecontable.Configuracion.OcultarTexto = false;
        }
        @Html.Partial("CampoverificacionUI", cvseriecontable)
    </div>
    <div class="col-md-12"></div>
    <div class="col-md-2 col-md-offset-2">
        @Html.ValidationMessageFor(f => Model.FkseriescontablesAST, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.FkseriescontablesCRC, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @{
            cvseriecontable.Name = "FkseriescontablesCRC";
            cvseriecontable.Url = Url.Action("SeriesContablesApi", "Api");
            cvseriecontable.Valor = Model.FkseriescontablesCRC;
            cvseriecontable.Params = "{\"tipodocumento\":\"AST\"}";
            cvseriecontable.SoloLectura = false;
            cvseriecontable.Autofocus = true;
            cvseriecontable.Obligatorio = false;
            cvseriecontable.Configuracion.OcultarTexto = false;
        }
        @Html.Partial("CampoverificacionUI", cvseriecontable)
    </div>
    <div class="col-md-12"></div>
    <div class="col-md-2 col-md-offset-2">
        @Html.ValidationMessageFor(f => Model.FkseriescontablesCRC, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.FkseriescontablesCRP, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @{
            cvseriecontable.Name = "FkseriescontablesCRP";
            cvseriecontable.Url = Url.Action("SeriesContablesApi", "Api");
            cvseriecontable.Valor = Model.FkseriescontablesCRP;
            cvseriecontable.Params = "{\"tipodocumento\":\"AST\"}";
            cvseriecontable.SoloLectura = false;
            cvseriecontable.Autofocus = true;
            cvseriecontable.Obligatorio = false;
            cvseriecontable.Configuracion.OcultarTexto = false;
        }
        @Html.Partial("CampoverificacionUI", cvseriecontable)
    </div>
    <div class="col-md-12"></div>
    <div class="col-md-2 col-md-offset-2">
        @Html.ValidationMessageFor(f => Model.FkseriescontablesCRP, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.FkseriescontablesPRC, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @{
            cvseriecontable.Name = "FkseriescontablesPRC";
            cvseriecontable.Url = Url.Action("SeriesContablesApi", "Api");
            cvseriecontable.Valor = Model.FkseriescontablesPRC;
            cvseriecontable.Params = "{\"tipodocumento\":\"AST\"}";
            cvseriecontable.SoloLectura = false;
            cvseriecontable.Autofocus = true;
            cvseriecontable.Obligatorio = false;
            cvseriecontable.Configuracion.OcultarTexto = false;
        }
        @Html.Partial("CampoverificacionUI", cvseriecontable)
    </div>
    <div class="col-md-12"></div>
    <div class="col-md-2 col-md-offset-2">
        @Html.ValidationMessageFor(f => Model.FkseriescontablesPRC, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.FkseriescontablesPRP, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @{
            cvseriecontable.Name = "FkseriescontablesPRP";
            cvseriecontable.Url = Url.Action("SeriesContablesApi", "Api");
            cvseriecontable.Valor = Model.FkseriescontablesPRP;
            cvseriecontable.Params = "{\"tipodocumento\":\"AST\"}";
            cvseriecontable.SoloLectura = false;
            cvseriecontable.Autofocus = true;
            cvseriecontable.Obligatorio = false;
            cvseriecontable.Configuracion.OcultarTexto = false;
        }
        @Html.Partial("CampoverificacionUI", cvseriecontable)
    </div>
    <div class="col-md-12"></div>
    <div class="col-md-2 col-md-offset-2">
        @Html.ValidationMessageFor(f => Model.FkseriescontablesPRP, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.FkseriescontablesREM, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @{
            cvseriecontable.Name = "FkseriescontablesREM";
            cvseriecontable.Url = Url.Action("SeriesContablesApi", "Api");
            cvseriecontable.Valor = Model.FkseriescontablesREM;
            cvseriecontable.Params = "{\"tipodocumento\":\"AST\"}";
            cvseriecontable.SoloLectura = false;
            cvseriecontable.Autofocus = true;
            cvseriecontable.Obligatorio = false;
            cvseriecontable.Configuracion.OcultarTexto = false;
        }
        @Html.Partial("CampoverificacionUI", cvseriecontable)
    </div>
    <div class="col-md-12"></div>
    <div class="col-md-2 col-md-offset-2">
        @Html.ValidationMessageFor(f => Model.FkseriescontablesREM, "", new { @class = "text-danger" })
    </div>
</div>


@{
    if (isNuevo)
    {
        <script src="@Url.Content("~/components/bootbox.js/bootbox.min.js")"></script>
        <script src="@Url.Content("~/Scripts/Model/Misc/VerificaPk.js")"></script>
    }
}