@using Marfil.App.WebMain.Misc
@using Marfil.Dom.Persistencia.Helpers
@using Marfil.Dom.Persistencia.Model.Configuracion
@using Marfil.Dom.Persistencia.Model.Configuracion.Cuentas
@using Marfil.Dom.Persistencia.Model.Documentos.AlbaranesCompras
@using Marfil.Dom.Persistencia.Model.Documentos.FacturasCompras
@using Marfil.Dom.Persistencia.Model.FicherosGenerales
@using Marfil.Dom.Persistencia.ServicesView.Servicios.Campoverificacion
@using Marfil.Inf.Genericos.Helper
@using Marfil.Inf.ResourcesGlobalization.Textos.Entidades
@model Marfil.Dom.Persistencia.Model.Documentos.FacturasCompras.FacturasComprasModel
@{
    var isreadonly = ViewData["readonly"] != null ? (bool)ViewData["readonly"] : false;
    var iseditable = ViewData["operacion"] != null && (ViewData["operacion"] == "Edit");
    var isNuevo = !isreadonly && !iseditable;
    var cvserie = FCampoverificacion.Instance.GetModel<SeriesModel>(WebHelper.ContextService);
    var campoverificacion = FCampoverificacion.Instance.GetModel<CuentasModel>(WebHelper.ContextService);
    var listmotivos = WebHelper.GetApplicationHelper().GetListMotivosDevolucion();
    var cvalbaranescompras = FCampoverificacion.Instance.GetModel<AlbaranesComprasModel>(WebHelper.ContextService);
   
}


@Html.HiddenFor(f => Model.Id)
@Html.HiddenFor(f => Model.Identificadorsegmento)
@Html.HiddenFor(f => Model.Fkejercicio)
@Html.HiddenFor(f => Model.Fkmotivosdevolucion)
@Html.HiddenFor(f => Model.Empresa)
@Html.HiddenFor(f => Model.Fkseries)
@Html.HiddenFor(f => Model.Fkestados)
@Html.HiddenFor(f=>Model.Decimalesmonedas)
<div class="form-group">
    @Html.LabelFor(f => Model.Referencia, new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        @Html.TextBoxFor(f => Model.Referencia, new { @class = "form-control", @readonly = "readonly" })
    </div>
    
    @Html.LabelFor(f => Model.Fkestados, new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        @Html.HiddenFor(f => Model.Fkestados)
        <label class="control-label bolder dark green">@Model.Estado.Descripcion</label>
    </div>

    @if (Model.urlAsiento != null)
    {
        <div class="col-md-2">
            <a class="btn-xs btn btn-info" align="right" href="@Model.urlAsiento">
                <i class="fa fa-eye">
                    Ver documento
                </i>
            </a>
        </div>
    }

    <div class="col-md-12"></div>
    <div class="col-md-2 col-md-offset-2">
        @Html.ValidationMessageFor(f => Model.Referencia, "", new { @class = "text-danger" })
    </div>
</div>



<div class="form-group">
    @Html.LabelFor(f => Model.Fechadocumento, new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        @Html.EditorFor(f => Model.Fechadocumento)
    </div>


    <div class="col-md-12"></div>
    <div class="col-md-2 col-md-offset-2">
        @Html.ValidationMessageFor(f => Model.Fechadocumento, "", new { @class = "text-danger" })
    </div>

</div>


<div class="form-group">
    @Html.LabelFor(f => Model.Fkproveedores, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @{
            campoverificacion.Name = "Fkproveedores";
            campoverificacion.Url = Url.Action("CuentasTiposProveedoresAcreedoresExclusiveApi", "Api");
            campoverificacion.CampoIdentificador = "Fkcuentas";
            campoverificacion.Valor = Model.Fkproveedores;
            campoverificacion.Titulo = "Proveedores";
            campoverificacion.SoloLectura = true;
            campoverificacion.Obligatorio = true;
        }
        @Html.Partial("CampoverificacionUI", campoverificacion)
    </div>
    <div class="col-md-10 col-md-offset-2">
        @Html.ValidationMessageFor(f => Model.Fkproveedores, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(f => Model.Numerodocumentoproveedor, new {@class = "control-label col-md-2"})
    <div class="col-md-3">
        @Html.TextBoxFor(f => Model.Numerodocumentoproveedor, isreadonly ? (object) new {@class = "form-control", @readonly = "readonly"} : (object) new {@class = "form-control"})
    </div>

    @Html.LabelFor(f => Model.Fechadocumentoproveedor, new {@class = "control-label col-md-3"})
    <div class="col-md-2">
        @Html.EditorFor(f => Model.Fechadocumentoproveedor)
    </div>

    <div class="col-md-12"></div>
    <div class="col-md-3 col-md-offset-2">
        @Html.ValidationMessageFor(f => Model.Numerodocumentoproveedor, "", new {@class = "text-danger"})
    </div>
    <div class="col-md-2 col-md-offset-3">
        @Html.ValidationMessageFor(f => Model.Fechadocumentoproveedor, "", new {@class = "text-danger"})
    </div>
</div>
<div class="form-group">
@Html.LabelFor(f => Model.Importefacturaproveedor, new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        @Html.TextBoxFor(f => Model.Importefacturaproveedor, isreadonly ? (object) new {@class = "form-control", @readonly = "readonly"} : (object) new {@class = "form-control"})
    </div>
    <div class="col-md-12"></div>
    <div class="col-md-2 col-md-offset-2">@Html.ValidationMessageFor(f => Model.Importefacturaproveedor, "", new { @class = "text-danger" })</div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.Notas, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextAreaFor(f => Model.Notas, isreadonly ? (object)new { @class = "form-control", @readonly = "readonly" } : (object)new { @class = "form-control" })
    </div>
</div>




