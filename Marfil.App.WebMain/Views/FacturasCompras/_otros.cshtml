@using System.Web.Mvc.Html
@using Marfil.App.WebMain.Misc
@using Marfil.Dom.Persistencia.Helpers
@using Marfil.Dom.Persistencia.Model.Configuracion
@using Marfil.Dom.Persistencia.Model.Configuracion.Cuentas
@using Marfil.Dom.Persistencia.Model.FicherosGenerales
@using Marfil.Dom.Persistencia.Model.Terceros
@using Marfil.Dom.Persistencia.ServicesView.Servicios.Campoverificacion
@model Marfil.Dom.Persistencia.Model.Documentos.FacturasCompras.FacturasComprasModel
@{
    var isreadonly = ViewData["readonly"] != null ? (bool)ViewData["readonly"] : false;
    var iseditable = ViewData["operacion"] != null && (ViewData["operacion"] == "Edit");
    var isNuevo = !isreadonly && !iseditable;
    var cvguiascontables = FCampoverificacion.Instance.GetModel<GuiascontablesModel>(WebHelper.ContextService);
    var incoterm = WebHelper.GetApplicationHelper().GetListIncoterm().Select(f => new SelectListItem()
    {
        Text = f.Descripcion,
        Value = f.Valor
    }).ToList();
    incoterm.Insert(0, new SelectListItem() { Text = "", Value = "" });

    var listunidadnegocio = WebHelper.GetApplicationHelper().GetListUnidadNegocio().Select(f => new SelectListItem()
    {
        Text = f.Descripcion,
        Value = f.Valor
    }).ToList();
    listunidadnegocio.Insert(0, new SelectListItem() { Text = "", Value = "" });

    var listcanalcontable = WebHelper.GetApplicationHelper().GetListCanalContable().Select(f => new SelectListItem()
    {
        Text = f.Descripcion,
        Value = f.Valor
    }).ToList();
    listcanalcontable.Insert(0, new SelectListItem() { Text = "", Value = "" });


    var campoverificacion = FCampoverificacion.Instance.GetModel<CuentasModel>(WebHelper.ContextService);
    var cvobras = FCampoverificacion.Instance.GetModel<ObrasModel>(WebHelper.ContextService);
    var cvaseguradoras = FCampoverificacion.Instance.GetModel<AseguradorasModel>(WebHelper.ContextService);
    var cvalmacenes = FCampoverificacion.Instance.GetModel<AlmacenesModel>(WebHelper.ContextService);
    var cvzonas = FCampoverificacion.Instance.GetModel<AlmacenesZonasModel>(WebHelper.ContextService);
}
<div>
    <div class="form-group">
        @Html.LabelFor(f => Model.Fkobras, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                cvobras.Name = "Fkobras";
                cvobras.Url = Url.Action("ObrasApi", "Api");
                cvobras.Valor = Model.Fkobras;
                cvobras.SoloLectura = isreadonly;
                

            }
            @Html.Partial("CampoverificacionUI", cvobras)
        </div>
        <div class="col-md-12"></div>
        <div class="col-md-10 col-md-offset-2">
            @Html.ValidationMessageFor(f => Model.Fkobras, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(f => Model.Fkalmacen, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                cvalmacenes.Name = "Fkalmacen";
                cvalmacenes.Url = Url.Action("AlmacenesApi", "Api");
                cvalmacenes.Valor = Model.Fkalmacen;
                cvalmacenes.SoloLectura = isreadonly;
            }
            @Html.Partial("CampoverificacionUI", cvalmacenes)
        </div>
        <div class="col-md-12"></div>
        <div class="col-md-2 col-md-offset-1">
            @Html.ValidationMessageFor(f => Model.Fkalmacen, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(f => Model.Fkzonas, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                cvzonas.Name = "Fkzonas";
                cvzonas.Url = Url.Action("AlmacenesZonasApi", "Api");
                cvzonas.Valor = Model.Fkzonas;
                cvzonas.ControlesAsociados = "[ { \"fkalmacen\":\"Fkalmacen\" } ]";
            }
            @Html.Partial("CampoverificacionUI", cvzonas)
        </div>
        <div class="col-md-12"></div>
        <div class="col-md-10 col-md-offset-2">
            @Html.ValidationMessageFor(f => Model.Fkzonas, "", new { @class = "text-danger" })
        </div>
    </div>
   
    <div class="form-group">
        @Html.LabelFor(f => Model.Cartacredito, new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextBoxFor(f => Model.Cartacredito, isreadonly ? (object)new { @class = "form-control", @readonly = "readonly" } : (object)new { @class = "form-control" })
        </div>
        @Html.LabelFor(f => Model.Vencimientocartacredito, new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(f => Model.Vencimientocartacredito)
        </div>
        <div class="col-md-12"></div>
        <div class="col-md-4 col-md-offset-2">
            @Html.ValidationMessageFor(f => Model.Referenciadocumento, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-2 col-md-offset-2">
            @Html.ValidationMessageFor(f => Model.Vencimientocartacredito, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(f => Model.Dua, new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextBoxFor(f => Model.Dua, isreadonly ? (object)new { @class = "form-control", @readonly = "readonly" } : (object)new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(f => Model.Unidadnegocio, new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(f => Model.Unidadnegocio, listunidadnegocio, isreadonly ? (object)new { @disabled = "disabled", @class = "form-control" } : (object)new { @class = "form-control" })
        </div>

        @Html.LabelFor(f => Model.Canalcontable, new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.DropDownListFor(f => Model.Canalcontable, listcanalcontable, isreadonly ? (object)new { @disabled = "disabled", @class = "form-control" } : (object)new { @class = "form-control" })
        </div>
        <div class="col-md-12"></div>
        <div class="col-md-2 col-md-offset-2">
            @Html.ValidationMessageFor(f => Model.Unidadnegocio, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-2 col-md-offset-2">
            @Html.ValidationMessageFor(f => Model.Canalcontable, "", new { @class = "text-danger" })
        </div>
    </div>



    <hr/>
    <div class="form-group">
        @Html.LabelFor(f => Model.Fkguiascontables, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                cvguiascontables.Name = "Fkguiascontables";
                cvguiascontables.Url = Url.Action("GuiascontablesApi", "Api");
                cvguiascontables.Valor = Model.Fkguiascontables;
            }
            @Html.Partial("CampoverificacionUI", cvguiascontables)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(f => Model.Valorredondeo, new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.TextBoxFor(f => Model.Valorredondeo, isreadonly ? (object)new { @class = "form-control", @readonly = "readonly" } : (object)new { @class = "form-control" })
        </div>
        <div class="col-md-12"></div>
        <div class="col-md-2 col-md-offset-2">@Html.ValidationMessageFor(f => Model.Valorredondeo, "", new { @class = "text-danger" })</div>
    </div>
</div>