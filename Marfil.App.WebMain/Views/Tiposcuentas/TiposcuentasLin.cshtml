@using System.ComponentModel.DataAnnotations
@using System.Drawing
@using System.Web.UI.WebControls
@using Marfil.Dom.Persistencia.Helpers
@using Marfil.Dom.Persistencia.Model
@using Marfil.Dom.Persistencia.Model.Configuracion.Cuentas
@using Marfil.Inf.ResourcesGlobalization.Textos.Entidades

@model TiposCuentasModel
@{
    Html.EnableClientValidation(true);
    Html.EnableUnobtrusiveJavaScript(true);
}
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        //general
        settings.Name = "GridView";
        settings.KeyFieldName = "Cuenta";
        settings.CallbackRouteValues = new { Controller = "Tiposcuentas", Action = "TiposcuentasLin" };
        settings.EnableRowsCache = true;
        settings.KeyboardSupport = true;
        settings.Width = Unit.Percentage(100);
        settings.SettingsPager.Visible = true;

        //edition
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Tiposcuentas", Action = "TiposcuentasLinAddNew" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Tiposcuentas", Action = "TiposcuentasLinDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
        settings.SettingsBehavior.ConfirmDelete = false;

        settings.Columns.Add(c =>
        {
            c.FieldName = "Empresa";
            c.Visible = false;

        });

        settings.Columns.Add(c =>
        {
            c.FieldName = "Tipos";
            c.Visible = false;
        });

        settings.Columns.Add(c =>
        {
            c.FieldName = "Cuenta";
            c.Caption = Tiposcuentas.Cuenta;
            c.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = c.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DropDownStyle = DropDownStyle.DropDownList;
            comboBoxProperties.TextField = "DescripcionLarga";
            comboBoxProperties.ValueField = "Id";
            comboBoxProperties.ValueType = typeof(String);
            comboBoxProperties.DataSource = Session["lineas"];
            comboBoxProperties.EnableSynchronization = DefaultBoolean.True;
            comboBoxProperties.IncrementalFilteringMode =  IncrementalFilteringMode.StartsWith;
        });

        settings.Columns.Add(c =>
        {
            c.FieldName = "Descripcion";
            c.Caption = Tiposcuentas.Descripcion;
        });

        settings.CommandColumn.ButtonType = GridCommandButtonRenderMode.Button;
        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = false;
        settings.CommandColumn.Width = Unit.Pixel(100);
        settings.Styles.CommandColumnItem.CssClass = "btn btn-info";
        settings.Styles.CommandColumnItem.BorderStyle = BorderStyle.None;
        settings.CommandColumn.VisibleIndex = 2;
        settings.SettingsEditing.ShowModelErrorsForEditors = true;

        var user = HttpContext.Current.User as ICustomPrincipal;
        settings.InitNewRow += (s, e) =>
        {

            e.NewValues["Tipos"] = (int)Model.Tipos;
            e.NewValues["Empresa"] = user.Empresa;
        };
        if (ViewBag.ReadOnly != null && ViewBag.ReadOnly)
        {
            settings.CommandColumn.Visible = false;
            settings.ClientSideEvents.RowDblClick = null;
        }
        settings.CustomJSProperties = (s, e) =>
        {
            e.Properties["cpEmpresa"] = user.Empresa;
        };
        settings.ClientSideEvents.BeginCallback = "function(s, e) { if(s.cpEmpresa) e.customArgs['Empresa'] = '"+ user.Empresa + "'; }";
        settings.ClientSideEvents.FocusedRowChanged = "function(s,e) { FunOnFocusedRowChanged(s, e);} ";
        settings.CellEditorInitialize = (s, e) =>
        {




            if (e.Column.FieldName == settings.KeyFieldName)
            {
                e.Editor.Focus();
            }


        };

        //display
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = true;
        settings.EditFormLayoutProperties.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
        settings.EditFormLayoutProperties.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 600;
        settings.ControlStyle.Border.BorderColor = ColorTranslator.FromHtml("#DDDDDD");
        settings.Styles.Footer.BackColor = ColorTranslator.FromHtml("#F2F2F2");

    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);

    }

}
@grid.Bind(Model.Lineas).GetHtml()

<script type="text/javascript">
   

    function FunOnFocusedRowChanged(s, e) {
        $("#GridView").unbind("keydown");
        $('#GridView').keydown(function (event) {


            var keycode = (event.keyCode ? event.keyCode : event.which);
            var index = s.GetFocusedRowIndex();

            switch (keycode) {
            case 113://editar
                if (!GridView.IsEditing()) {

                    GridView.StartEditRow(index);
                }
                break;
            case 46://Eliminar
                if (!GridView.IsEditing()) {
                    GridView.DeleteRow(index);
                }
                break;
            case 27://escape
                if (GridView.IsEditing()) {
                    GridView.CancelEdit();
                    GridView.Focus();
                }
                break;
            case 13://enter
                if (GridView.IsEditing()) {
                    GridView.Focus();
                    GridView.UpdateEdit();
                }
                break;
            case 107://mas
                CreateRow();
                break;
            }

        });
    }

    function CreateRow() {
        if (!GridView.IsEditing()) {
            GridView.Focus();
            GridView.AddNewRow();

        }
    }
    $(document).ready(function () {
        GridView.Focus();
    });

</script>
