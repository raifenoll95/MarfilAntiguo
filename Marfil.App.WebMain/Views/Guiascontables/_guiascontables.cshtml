@using System.Web.Mvc.Html
@using Marfil.App.WebMain.Misc
@using Marfil.Dom.Persistencia.Helpers
@using Marfil.Dom.Persistencia.Model
@using Marfil.Dom.Persistencia.Model.Configuracion.Cuentas
@using Marfil.Dom.Persistencia.Model.FicherosGenerales
@using Marfil.Dom.Persistencia.ServicesView.Servicios.Campoverificacion
@using Marfil.Inf.ResourcesGlobalization.Textos.Entidades
@using Resources
@model Marfil.Dom.Persistencia.Model.Configuracion.Cuentas.GuiascontablesModel
@{
    var isreadonly = ViewData["readonly"] != null ? (bool)ViewData["readonly"] : false;
    var iseditable = ViewData["operacion"] != null && (ViewData["operacion"] == "Edit");
    var isNuevo = !isreadonly && !iseditable;
    var user = HttpContext.Current.User as ICustomPrincipal;
    var campoverificacion = FCampoverificacion.Instance.GetModel<CuentasModel>(WebHelper.ContextService);
    campoverificacion.Configuracion.OcultarTexto = true;
}
@Html.HiddenFor(f=>Model.Empresa)
<div class="form-group" @Html.Raw(isNuevo ? "ng-controller=\"VerificaPk\"" : string.Empty)>
    @Html.LabelFor(f => Model.Id, new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        @Html.TextBoxFor(f => Model.Id, isreadonly || iseditable ? (object)new { @class = "form-control", @readonly = "readonly" } : (object)new { @class = "form-control", @autofocus = "", @ng_blur = "existePk(12,2,\"" + Url.Action("Exists", "Guiascontables") + "\",\"" + Url.Action("Edit", "Guiascontables") + "\")", @ng_model = "codigo", @id = "idcontrol" })
    </div>
    <div class="col-md-10 col-md-offset-2">
        @Html.ValidationMessageFor(f => Model.Id, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.Descripcion, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(f => Model.Descripcion, isreadonly ? (object)new { @class = "form-control", @autofocus = "", @readonly = "readonly" } : (object)new { @class = "form-control", @autofocus = "" })
        @Html.ValidationMessageFor(f => Model.Descripcion, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.Defecto, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.CheckBoxFor(f=> Model.Defecto, isreadonly ? (object)new {  @autofocus = "", @readonly = "readonly" } : (object)new {  @autofocus = "" })
        @*<input type="checkbox" ng-model="Model.Defecto" @Html.Raw(isreadonly ? "disabled='disabled'" : "") />*@
    </div>
</div>

<h2>@Guiascontables.LblCuentasDefecto</h2>
<div class="form-group">
    <div class="col-md-3">
        @Html.LabelFor(f => Model.Fkcuentascompras, new {@class = "control-label"})
        <div>
            @{
                campoverificacion.Name = "Fkcuentascompras";
                campoverificacion.Url = Url.Action("CuentasClienteApi", "Api");
                campoverificacion.Valor = Model.Fkcuentascompras;
                
                campoverificacion.SoloLectura = isreadonly;
            }

            @Html.Partial("CampoverificacionUI", campoverificacion)

        </div>
        @Html.ValidationMessageFor(f => Model.Fkcuentascompras, "", new {@class = "text-danger"})
    </div>

    <div class="col-md-3">
        @Html.LabelFor(f => Model.Fkcuentasventas, new {@class = "control-label"})
        <div>
            @{
                campoverificacion.Name = "Fkcuentasventas";
                campoverificacion.Valor = Model.Fkcuentasventas;
            }

            @Html.Partial("CampoverificacionUI", campoverificacion)

        </div>
        @Html.ValidationMessageFor(f => Model.Fkcuentasventas, "", new {@class = "text-danger"})
    </div>



    <div class="col-md-3">
        @Html.LabelFor(f => Model.Fkcuentasdevolucioncompras, new {@class = "control-label"})
        <div>
            @{
                campoverificacion.Name = "Fkcuentasdevolucioncompras";
                campoverificacion.Valor = Model.Fkcuentasdevolucioncompras;
            }

            @Html.Partial("CampoverificacionUI", campoverificacion)

        </div>
        @Html.ValidationMessageFor(f => Model.Fkcuentasdevolucioncompras, "", new {@class = "text-danger"})
    </div>



    <div class="col-md-3">
        @Html.LabelFor(f => Model.Fkcuentasdevolucionventas, new {@class = "control-label"})
        <div>
            @{
                campoverificacion.Name = "Fkcuentasdevolucionventas";
                campoverificacion.Valor = Model.Fkcuentasdevolucionventas;
            }

            @Html.Partial("CampoverificacionUI", campoverificacion)

        </div>
        @Html.ValidationMessageFor(f => Model.Fkcuentasdevolucionventas, "", new {@class = "text-danger"})
    </div>
</div>
<div class="margin-top">
    <div class="form-group">
        <div class="col-md-12">
            <span class="fa-2x">
                @Guiascontables.LblCuentasguias
            </span>
            @if (!isreadonly)
            {
                <span class="pull-right">
                    <a class="btn btn-success btn-sm" href="javascript:CreateRow(); ">
                        <i class="fa fa-plus"></i>
                        @General.BtnNuevoRegistro
                    </a>
                </span>
            }


        </div>
        <div class="col-md-12">
            @Html.Partial("_guiascontableslin", Model.Lineas)
        </div>
    </div>    
</div>

@{
    if (isNuevo)
    {
        <script src="@Url.Content("~/components/bootbox.js/bootbox.min.js")"></script>
        <script src="@Url.Content("~/Scripts/Model/Misc/VerificaPk.js")"></script>
    }
}

<script>
    $.validator.setDefaults({ ignore: null });
</script>