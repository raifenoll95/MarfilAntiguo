@using System.Web.Mvc.Html
@using Marfil.Dom.Persistencia
@using Marfil.Dom.Persistencia.Helpers
@using Marfil.Dom.Persistencia.Listados
@using Marfil.Dom.Persistencia.Model.Configuracion.Cuentas
@using Marfil.Dom.Persistencia.Model.Documentos.Presupuestos
@using Marfil.Dom.Persistencia.Model.FicherosGenerales
@using Marfil.Dom.Persistencia.Model.Terceros
@using Marfil.Dom.Persistencia.ServicesView.Servicios.Campoverificacion
@using Marfil.App.WebMain.Misc
@using Marfil.Dom.Persistencia.Model.Configuracion
@using Marfil.Dom.Persistencia.Model.Interfaces
@using Resources

@model Marfil.Dom.Persistencia.Listados.ListadosDiarioContable
@{
    var toolbarModel = Model as IToolbar;
    ViewBag.Title = toolbarModel.Toolbar.Titulo;
    var cvseriecontable = FCampoverificacion.Instance.GetModel<SeriesContablesModel>(WebHelper.ContextService);

    var listatiposasientos = WebHelper.GetApplicationHelper().GetListTiposAsientos().Select(f => new SelectListItem()
    {
        Text = f.Descripcion,
        Value = f.Valor
    }).ToList();
    listatiposasientos.Insert(0, new SelectListItem() { Text = "", Value = "" });

    var listcanalcontable = WebHelper.GetApplicationHelper().GetListCanalContable().Select(f => new SelectListItem()
    {
        Text = f.Descripcion,
        Value = f.Valor
    }).ToList();
    listcanalcontable.Insert(0, new SelectListItem() { Text = "", Value = "" });


}
@Html.HiddenFor(f => Model.Empresa)

<div class="col-md-10">

    @*Serie Contable*@
    <div class="form-group">
        @Html.LabelFor(f => Model.Fkseriescontables, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                cvseriecontable.Name = "Fkseriescontables";
                cvseriecontable.Url = Url.Action("SeriesContablesApi", "Api");
                cvseriecontable.Valor = Model.Fkseriescontables;
                //cvseriecontable.Titulo = "Series contables";
                cvseriecontable.Params = "{\"tipodocumento\":\"AST\"}";
                cvseriecontable.SoloLectura = false;
                cvseriecontable.Autofocus = true;
                cvseriecontable.Obligatorio = true;
                cvseriecontable.Configuracion.OcultarTexto = false;
            }
            @Html.Partial("CampoverificacionUI", cvseriecontable)
        </div>
        <div class="col-md-12"></div>
        <div class="col-md-2 col-md-offset-2">
            @Html.ValidationMessageFor(f => Model.Fkseriescontables, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(f => Model.DocumentoDesde, new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(f => Model.DocumentoDesde)
        </div>
        @Html.LabelFor(f => Model.DocumentoHasta, new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(f => Model.DocumentoHasta)
        </div>
        <div class="col-md-12"></div>
        <div class="col-md-4 col-md-offset-2">
            @Html.ValidationMessageFor(f => Model.DocumentoDesde, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4 col-md-offset-2">
            @Html.ValidationMessageFor(f => Model.DocumentoHasta, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(f => Model.FechaDesde, new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(f => Model.FechaDesde)
        </div>
        @Html.LabelFor(f => Model.FechaHasta, new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(f => Model.FechaHasta)
        </div>
        <div class="col-md-12"></div>
        <div class="col-md-4 col-md-offset-2">
            @Html.ValidationMessageFor(f => Model.FechaDesde, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4 col-md-offset-2">
            @Html.ValidationMessageFor(f => Model.FechaHasta, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(f => Model.Tipoasiento, new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(f => Model.Tipoasiento, listatiposasientos)
        </div>        
        @Html.LabelFor(f => Model.Canalcontable, new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(f => Model.Canalcontable, listcanalcontable, new { @class = "form-control" })
        </div>                
    </div>   
    
    <div class="form-group">
        @Html.LabelFor(f => Model.SumaAnteriorDebe, new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(f => Model.SumaAnteriorDebe, new { @onkeydown = "onlyNumeric(event)" })
        </div>
        @Html.LabelFor(f => Model.SumaAnteriorHaber, new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(f => Model.SumaAnteriorHaber, new { @onkeydown = "onlyNumeric(event)" })
        </div>        
    </div>

    <div class="form-group">
        @Html.LabelFor(f => Model.FechaInforme, new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(f => Model.FechaInforme)
        </div>
    </div>
      
</div>


<script type="text/javascript">


    document.addEventListener('DOMContentLoaded', function () {

        var parentButtonListar = document.getElementsByClassName('btn btn-info')[0].parentElement;

        var button = document.createElement('button')
        button.id = "imprimir"
        button.className = "btn btn-info"
        button.type = "button"
        button.style.margin = "5px"
        button.addEventListener("click", imprimir)

        var i = document.createElement('i')
        i.className = "fa fa-print"
        i.innerText = " Imprimir"

        button.appendChild(i)

        // [1] Botón Limpiar
        parentButtonListar.insertBefore(button, parentButtonListar.children[1])

    }, false);

    function imprimir() {
    
        var rx = /^[0-9]*(\,[0-9]{0,2})?$/;

        var sumaDebe = document.getElementById("SumaAnteriorDebe");
        if (!rx.test(sumaDebe.value)) {
            sumaDebe.value = 0;            
        }

        var sumaHaber = document.getElementById("SumaAnteriorHaber");
        if (!rx.test(sumaHaber.value)) {
            sumaHaber.value = 0;
        }

        var data = {
            Serie: document.getElementById('Fkseriescontables').value,
            DocumentoDesde: document.getElementById('DocumentoDesde').value,
            DocumentoHasta: document.getElementById('DocumentoHasta').value,
            FechaDesde: document.getElementById('FechaDesde').value,
            FechaHasta: document.getElementById('FechaHasta').value,
            TipoAsiento: document.getElementById('Tipoasiento').options[document.getElementById('Tipoasiento').selectedIndex].value,
            CanalContable: document.getElementById('Canalcontable').options[document.getElementById('Canalcontable').selectedIndex].value,
            SumaAnteriorDebe: document.getElementById('SumaAnteriorDebe').value || 0,
            SumaAnteriorHaber: document.getElementById('SumaAnteriorHaber').value || 0,
            FechaInforme: document.getElementById('FechaInforme').value
        };

        var dataSerialized = JSON.stringify(data)

        window.open('@Url.Action("Visualizar", "Designer")' + '?primaryKey=' + dataSerialized + '&tipo=Asientos&reportId=Defecto');

    };


</script>
