@using Marfil.App.WebMain.Controllers
@using Marfil.App.WebMain.Misc
@using Marfil.Dom.Persistencia.Model.Configuracion
@using Marfil.Dom.Persistencia.Model.FicherosGenerales
@using Marfil.Dom.Persistencia.ServicesView.Servicios.Campoverificacion
@using Marfil.Inf.ResourcesGlobalization.Textos.Entidades
@using Resources
@model Marfil.Dom.Persistencia.Model.Documentos.Pedidos.PedidosModel
@{
    var isreadonly = ViewData["readonly"] != null ? (bool)ViewData["readonly"] : false;
    var iseditable = ViewData["operacion"] != null && (ViewData["operacion"] == "Edit");
    var isNuevo = !isreadonly && !iseditable && !(Model.Importado ?? false);
    var cvserie = FCampoverificacion.Instance.GetModel<SeriesModel>(WebHelper.ContextService);
    var canImportar = Model.Estado.Tipoestado <= TipoEstado.Curso;
}

<script src="@Url.Content("~/Scripts/Model/Articulos/Formulas/Formulas.js")"></script>
<script src="@Url.Content("~/Scripts/Model/Articulos/Formulas/FormulasService.js")"></script>
<script src="@Url.Content("~/Scripts/Model/Pedidos/PedidosController.js")"></script>

<div  ng-controller="PedidosCtrl" ng-init="init(@((!isNuevo).ToString().ToLower()),'@Model.Fkclientes','@Model.Fkagentes','@Model.Fkcomerciales','@Model.Fkbancosmandatos','@Model.Fkobras',@isNuevo.ToString().ToLower(),'@Url.Action("PedidosRefresh")','@Url.Action("BancosMandatosApi","Api")','@Url.Action("ImportarLineas")','@string.Format("{0};{1};{2}",Model.Referencia??string.Empty,(Model.DocumentosImpresion?.Tipo)?.ToString()??string.Empty,Model.DocumentosImpresion?.Defecto??string.Empty)')">


    <div id="tabs">
        <ul class="nav nav-tabs" data-tabs="tabs">
            <li class="active"><a data-toggle="tab" href="#general">@General.LblGeneral</a></li>
            <li><a data-toggle="tab" href="#direcciones">@Clientes.TituloEntidadSingular</a></li>
            <li><a data-toggle="tab" href="#comerciales">@Comerciales.TituloEntidad</a></li>
            <li><a data-toggle="tab" href="#otros">@General.LblOtros</a></li>
            <li><a data-toggle="tab" href="#desglose">@General.LblDesglose</a></li>
            @if (!isreadonly && canImportar)
            {
                <li><a data-toggle="tab" href="#importar">@Pedidos.LblImportar</a></li>
            }
            <li><a data-toggle="tab" href="#fabricacion">@General.Fabricacion</a></li>
            <li><a data-toggle="tab" href="#imputacionmateriales">@General.ImputacionMateriales</a></li>
            @if (iseditable || isreadonly)
            {
                <li><a data-toggle="tab" href="#galeria">@General.GestionFicheros</a></li>
            }
           
        </ul>
    </div>
    <div class="tab-content">
        <div id="general" class="tab-pane fade in active">
            @Html.Partial("_cabeceraPedidos", Model)
        </div>
        <div id="direcciones" class="tab-pane fade in">
            @Html.Partial("_clientes", Model)
        </div>
        <div id="comerciales" class="tab-pane fade in">
            @Html.Partial("_comerciales", Model)
        </div>
        <div id="otros" class="tab-pane fade in">
            @Html.Partial("_otros", Model)
        </div>
        <div id="desglose" class="tab-pane fade in">
            @Html.Partial("_desglose", Model)
        </div>       
        @if (!isreadonly && canImportar)
        {
            <div id="importar" class="tab-pane fade in">
                @Html.Partial("_importar", Model)
            </div>
        }
        <div id="fabricacion" class="tab-pane fade in">
            @Html.Partial("_fabricacion", Model)
        </div>        
        <div id="imputacionmateriales" class="tab-pane fade in">
            @Html.Partial("_imputacionmateriales", Model)
        </div>
        @if (iseditable || isreadonly)
        {
            <div id="galeria" class="tab-pane fade in">
                @Html.Partial("_galeriaimagenes", Model.Galeria)
            </div>
        }        
    </div>
</div>
<script>
    $('a[data-toggle="tab"]').on('shown.bs.tab', function(e) {
        var target = $(e.target).attr("href"); // activated tab
        if (target === "#desglose") {
            GridViewLineas.Refresh();
            GridViewTotales.Refresh();            
        }
        else if (target === "#fabricacion") {
            GridViewCostesFabricacion.Refresh();
        }
        else if (target === "#imputacionmateriales") {
            GridViewImputacionMateriales.Refresh();
            GridViewTotalesImputacion.Refresh();
        }
    });


    $.validator.setDefaults({ ignore: null });
    //Start search tiposiva
    function OnKeyPressFktiposiva(s, e) {
        var keycode = (e.htmlEvent.keyCode ? e.htmlEvent.keyCode : e.htmlEvent.which);
        if (keycode == 66 && e.htmlEvent.ctrlKey) {
            SearchArticulo();
        }

    }

    function SearchFktiposiva() {

        var obj = {
            campoIdentificador: "Id",
            IdComponenteasociado: "Fktiposiva",
            IdFormulariomodal: "BusquedaGlobal",
            Url: '@Url.Action("TiposIvaApi","Api")',
            Titulo: "Busqueda de tipos de IVA",
            Params: ""
        };

        eventAggregator.Publish("_lanzarbusqueda", obj);
    }

    eventAggregator.RegisterEvent("Fktiposiva-Buscarfocus", function (obj) {
        Fktiposiva.SetValue(obj);

        OnFktiposivaChanged(null, null);


    });


    function OnFktiposivaChanged(s, e) {

        GridViewLineas.SetEnabled(false);
        var model =
        {
            Url: '@Url.Action("TiposivaApi","api")',
            Id: Fktiposiva.GetValue(),
            CtrlPorcentajeiva: GridViewLineas.GetEditor("Porcentajeiva"),
            CtrlGridview: GridViewLineas
        };
        eventAggregator.Publish("Fktiposiva-changed", model);


    }
    //end search tiposiva
</script>
@if (!isreadonly)
{
   
    @Html.Partial("UsersControls/_ultimoprecioModal")
    @Html.Partial("UsersControls/_importarlineasModal")
    @Html.Partial("UsersControls/_calculadoraDocumentos")
}




