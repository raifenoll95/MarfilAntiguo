@using System.Web.UI.WebControls
@using DevExpress.Data
@using Marfil.App.WebMain.Misc
@using Marfil.Dom.Persistencia.Helpers
@using Marfil.Dom.Persistencia.Model
@using Marfil.Dom.Persistencia.Model.FicherosGenerales
@using Marfil.Inf.ResourcesGlobalization.Textos.Entidades
@using Resources
@model Marfil.Dom.Persistencia.Model.DireccionesModel
@{
    var idControl = "direcciones" + Model.Id.ToString().Replace("-", "");
    var factory = new FModel();
    var lindireccion = factory.GetModel<DireccionesLinModel>(WebHelper.ContextService);
    var isreadonly = Model.ReadOnly;
}
<div class="modal fade" id="@idControl" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">@Direcciones.TituloEntidad</h4>
            </div>
            <div class="modal-body">

                <div id="tabs">
                    <ul class="nav nav-tabs" data-tabs="tabs">
                        <li class="active"><a data-toggle="tab" href="@Html.Raw("#general" + idControl)">@Direcciones.Direccion</a></li>
                        <li><a data-toggle="tab" href="@Html.Raw("#contactos" + idControl)">@Direcciones.Contacto</a></li>
                        <li><a data-toggle="tab" href="@Html.Raw("#otros" + idControl)">@Direcciones.Otros</a></li>

                    </ul>
                </div>
                <div class="tab-content">
                    <div id="@Html.Raw("general" + idControl)" class="tab-pane fade in active">
                        <div class="form-group">
                            <div class="col-md-4 pull-right align-right">
                                @Html.LabelFor(f => lindireccion.Defecto, new { @class = "control-label", @style="margin-right:10px" })
                               
                                    <input type="checkbox" ng-model="nuevo.Defecto" @Html.Raw(isreadonly ? "disabled='disabled'" : "") />
                               
                            </div>
                            @Html.LabelFor(f => lindireccion.Fktipodireccion, new {@class = "control-label col-md-2"})
                            <div class="col-md-4">
                                @Html.DropDownListFor(f => lindireccion.Fktipodireccion, WebHelper.GetApplicationHelper().GetListTiposDireccion().Select(f => new SelectListItem() {Text = f.Descripcion, Value = f.Valor}), isreadonly ? (object) new {@class = "form-control", @disabled = "disabled", @ng_model = "nuevo.Fktipodireccion"} : (object) new {@class = "form-control", @ng_model = "nuevo.Fktipodireccion"})
                            </div>

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(f => lindireccion.Descripcion, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input type="text" class="form-control" ng-model="nuevo.Descripcion" @Html.Raw(isreadonly ? "readonly='readonly'" : "") />
                            </div>
                            <div class="col-md-10">
                                <span ng-show="nuevo.descripcionerror!=''" ng-model="nuevo.descripcionerror"></span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(f => lindireccion.Fktipovia, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(f => lindireccion.Fktipovia, WebHelper.GetApplicationHelper().GetListTiposVias().Select(f => new SelectListItem() { Text = f.Descripcion, Value = f.Valor }), isreadonly ? (object)new { @class = "form-control", @disabled = "disabled", @ng_model = "nuevo.Fktipovia" } : (object)new { @class = "form-control", @ng_model = "nuevo.Fktipovia" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(f => lindireccion.Direccion, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <textarea class="form-control" ng-model="nuevo.Direccion" @Html.Raw(isreadonly ? "readonly='readonly'" : "")></textarea>
                            </div>
                            <div class="col-md-10">
                                <span ng-show="nuevo.direccionerror!=''" ng-model="nuevo.direccionerror"  @Html.Raw(isreadonly ? "readonly='readonly'" : "") ></span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(f => lindireccion.Poblacion, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input type="text" class="form-control" ng-model="nuevo.Poblacion"  @Html.Raw(isreadonly ? "readonly='readonly'" : "") />
                            </div>
                            <div class="col-md-10">
                                <span ng-show="nuevo.poblacionerror!=''" ng-model="nuevo.poblacionerror"  @Html.Raw(isreadonly ? "readonly='readonly'" : "") ></span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(f => lindireccion.Cp, new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                <input type="text" class="form-control" ng-model="nuevo.Cp"  @Html.Raw(isreadonly ? "readonly='readonly'" : "")  />
                            </div>
                            <div class="col-md-2">
                                <span ng-show="nuevo.cperror!=''" ng-model="nuevo.cperror"></span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(f => lindireccion.Fkpais, new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(f => lindireccion.Fkpais, WebHelper.GetApplicationHelper().GetListPaises().Select(f => new SelectListItem() { Text = f.Descripcion, Value = f.Valor }), isreadonly ? (object)new { @class = "form-control", @disabled = "disabled", @ng_model = "nuevo.Fkpais" } : (object)new { @class = "form-control", @ng_model = "nuevo.Fkpais" })
                            </div>

                            @Html.LabelFor(f => lindireccion.Fkprovincia, new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                <select ng-model="nuevo.Fkprovincia" class="form-control" @Html.Raw(isreadonly ? "disabled='disabled'" : "")>
                                    <option ng-repeat="item in provincias" value="{{item.Id}}">{{item.Nombre}}</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div id="@Html.Raw("contactos" + idControl)" class="tab-pane fade margin-bottom">
                        <div class="form-group">
                            @Html.LabelFor(f => lindireccion.Personacontacto, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input type="text" class="form-control" ng-model="nuevo.Personacontacto"  @Html.Raw(isreadonly ? "readonly='readonly'" : "")  />
                            </div>
                            <div class="col-md-10">
                                <span ng-show="nuevo.personacontactoerror!=''" ng-model="nuevo.personacontactoerror"></span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(f => lindireccion.Telefono, new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                <input type="text" max-length="15" class="form-control" ng-model="nuevo.Telefono"  @Html.Raw(isreadonly ? "readonly='readonly'" : "")  />
                            </div>
                            @Html.LabelFor(f => lindireccion.Telefonomovil, new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                <input type="text" class="form-control" max-length="15" ng-model="nuevo.Telefonomovil" @Html.Raw(isreadonly ? "readonly='readonly'" : "")/>
                            </div>
                            <div class="col-md-12"></div>
                            <div class="col-md-4 col-md-offset-2">
                                <span ng-show="nuevo.telefonoerror!=''" class="red" ng-model="nuevo.telefonoerror">{{nuevo.telefonoerror}}</span>
                            </div>
                            <div class="col-md-4">
                                <span ng-show="nuevo.telefonomovilerror!=''" class="red"  ng-model="nuevo.telefonomovilerror">{{nuevo.telefonomovilerror}}</span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(f => lindireccion.Fax, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input type="text" class="form-control" ng-model="nuevo.Fax"  @Html.Raw(isreadonly ? "readonly='readonly'" : "") />
                            </div>
                            <div class="col-md-10">
                                <span ng-show="nuevo.faxerror!=''" ng-model="nuevo.faxerror"></span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(f => lindireccion.Email, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input type="text" class="form-control" ng-model="nuevo.Email"  @Html.Raw(isreadonly ? "readonly='readonly'" : "")  />
                            </div>
                            <div class="col-md-10">
                                <span ng-show="nuevo.emailerror!=''" ng-model="nuevo.emailerror"></span>
                            </div>
                        </div>
                    </div>
                    <div id="@Html.Raw("otros" + idControl)" class="tab-pane fade margin-bottom">
                        <div class="form-group">
                            @Html.LabelFor(f => lindireccion.Web, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input type="text" class="form-control" ng-model="nuevo.Web"  @Html.Raw(isreadonly ? "readonly='readonly'" : "") />
                            </div>
                            <div class="col-md-10">
                                <span ng-show="nuevo.weberror!=''" ng-model="nuevo.weberror"></span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(f => lindireccion.Notas, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <textarea type="text" class="form-control" ng-model="nuevo.Notas"  @Html.Raw(isreadonly ? "readonly='readonly'" : "") ></textarea>
                            </div>

                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                @if (!isreadonly)
                {
                    <button type="button" class="btn btn-primary" ng-click="saveItem()">@General.BtnGuardar</button>
                }
                
            </div>
        </div>
    </div>
</div>
