@using Marfil.App.WebMain.Misc
@using Marfil.Dom.Persistencia.Model.Documentos.CobrosYPagos
@using Marfil.App.WebMain.Misc
@using Marfil.Dom.Persistencia.Model.Configuracion.Cuentas
@using Marfil.Dom.Persistencia.ServicesView.Servicios.Campoverificacion
@using Marfil.Inf.ResourcesGlobalization.Textos.Entidades
@using Marfil.Dom.Persistencia.Model.FicherosGenerales;
@using Resources

@*Rai*@

@model CircuitoTesoreriaCobrosModel
@{
    var isreadonly = ViewData["readonly"] != null ? (bool)ViewData["readonly"] : false;
    var iseditable = ViewData["operacion"] != null && (ViewData["operacion"] == "Edit");
    var isNuevo = !isreadonly && !iseditable;
    var campoverificacion = FCampoverificacion.Instance.GetModel<CuentasModel>(WebHelper.ContextService);
    var cvsituaciones = FCampoverificacion.Instance.GetModel<SituacionesTesoreriaModel>(WebHelper.ContextService);
}

<script src="@Url.Content("~/Scripts/jquery.redirect.js")"></script>
<script src="@Url.Content("~/Scripts/Model/Articulos/Formulas/Formulas.js")"></script>
<script src="@Url.Content("~/Scripts/Model/Articulos/Formulas/FormulasService.js")"></script>
<script src="@Url.Content("~/Scripts/Model/Facturas/VencimientosController.js")"></script>

    @*Tipo Circuito*@
    <div class="form-group">
        @Html.LabelFor(f => Model.Tipocircuito, new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EnumDropDownList("Tipocircuito", Model.Tipocircuito, isreadonly ? (object)new { @disabled = "disabled", @class = "form-control" } : (object)new { @class = "form-control" })
            @Html.ValidationMessageFor(f => Model.Tipocircuito, "", new { @class = "text-danger" })
        </div>
    </div>


    @*Descripcion*@
    <div class="form-group">
        @Html.LabelFor(f => Model.Descripcion, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(f => Model.Descripcion, isreadonly ? (object)new { @aria_label = "codigo", @class = "form-control", @readonly = "readonly" } : (object)new { @class = "form-control", @autofocus = "" })
        </div>
        <div class="col-md-10 col-md-offset-2">
            @Html.ValidationMessageFor(f => Model.Descripcion, "", new { @class = "text-danger" })
        </div>
    </div>

    @*Situacion de A*@
    <div class="form-group">
        @Html.LabelFor(f => Model.Situacioninicial, isreadonly ? (object)new { @class = "control-label col-md-2", @readonly = "readonly" } : new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                cvsituaciones.Name = "SituacionInicial";
                cvsituaciones.Url = Url.Action("SituacionesApi", "Api");
                cvsituaciones.Valor = Model.Situacioninicial;
                cvsituaciones.Titulo = "Situación de tesorería inicial";
                cvsituaciones.SoloLectura = isreadonly;
                cvsituaciones.Obligatorio = true;
            }
            @Html.Partial("CampoverificacionUI", cvsituaciones)

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(f => Model.Situacionfinal, isreadonly ? (object)new { @class = "control-label col-md-2", @readonly = "readonly" } : new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                cvsituaciones.Name = "SituacionFinal";
                cvsituaciones.Url = Url.Action("SituacionesApi", "Api");
                cvsituaciones.Valor = Model.Situacionfinal;
                cvsituaciones.Titulo = "Situación de tesorería final";
                cvsituaciones.SoloLectura = isreadonly;
                cvsituaciones.Obligatorio = true;
            }
            @Html.Partial("CampoverificacionUI", cvsituaciones)

        </div>
    </div>

    @*Booleanos*@
    <div class="form-group">
        @Html.LabelFor(f => Model.Asientocontable, new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.CheckBoxFor(f => Model.Asientocontable, (object)new { @readonly = isreadonly })
        </div>
        @Html.LabelFor(f => Model.Fecharemesa, new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.CheckBoxFor(f => Model.Fecharemesa, (object)new { @readonly = isreadonly })
        </div>
        @Html.LabelFor(f => Model.Fechapago, new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.CheckBoxFor(f => Model.Fechapago, (object)new { @readonly = isreadonly })
        </div>
    </div>

    @*Booleanos*@
    <div class="form-group">
        @Html.LabelFor(f => Model.Liquidariva, new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.CheckBoxFor(f => Model.Liquidariva, (object)new { @readonly = isreadonly })
        </div>
        @Html.LabelFor(f => Model.Conciliacion, new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.CheckBoxFor(f => Model.Conciliacion, (object)new { @readonly = isreadonly })
        </div>
        @Html.LabelFor(f => Model.Datosdocumento, new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.CheckBoxFor(f => Model.Datosdocumento, (object)new { @readonly = isreadonly })
        </div>
    </div>

    @{
        if (isNuevo || iseditable)
        {
            <script src="@Url.Content("~/components/bootbox.js/bootbox.min.js")"></script>
            <script src="@Url.Content("~/Scripts/Model/Misc/VerificaPk.js")"></script>
        }
    }
