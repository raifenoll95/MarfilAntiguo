@using Marfil.Dom.ControlsUI.Busquedas
@using Marfil.Dom.Persistencia.Model.Interfaces
@using Marfil.Dom.Persistencia.Model.FicherosGenerales
@using Marfil.Dom.Persistencia.Model.Configuracion.TablasVarias.Derivados
@using Marfil.Dom.Persistencia.Model.Documentos.Facturas
@using Marfil.Dom.Persistencia.ServicesView.Servicios
@using Marfil.Dom.Persistencia.ServicesView.Servicios.Documentos
@using Newtonsoft.Json
@using Resources
@model IModelView
@{
    ViewBag.Title = ((IToolbar)Model).Toolbar.Titulo;
    var modelview = Model as FacturasModel;
    var modelImprimir = modelview.GetListFormatos();
    var columns = new[]
   {
        new ColumnDefinition() {field = "Id", displayName = "Id", visible = false, width = 100 },
        new ColumnDefinition() {field = "Fkarticulos", displayName = "Cod. Artículo", visible = true, width = 150},
        new ColumnDefinition() {field = "Descripcion", displayName = "Descripción", visible = true, width = 200},
        new ColumnDefinition() {field = "Lote", displayName = "Lote", visible = true, width = 100, enableCellEdit = false},
        new ColumnDefinition() {field = "Cantidad", displayName = "Cantidad", visible = true, width = 100, enableCellEdit = true, type = "number"},
        new ColumnDefinition() {field = "SLargo", displayName = "Largo", visible = true, width = 100},
        new ColumnDefinition() {field = "SAncho", displayName = "Ancho", visible = true, width = 100},
        new ColumnDefinition() {field = "SGrueso", displayName = "Grueso", visible = true, width = 100},
        new ColumnDefinition() {field = "SMetros", displayName = "Metros", visible = true, width = 100},
        new ColumnDefinition() {field = "SPrecio", displayName = "Precio", visible = true, width = 100},
        new ColumnDefinition() {field = "Porcetanjedescuento", displayName = "%  Desc.", visible = true, width = 100},
        new ColumnDefinition() {field = "SImporte", displayName = "Subtotal", visible = true, width = 100}

    };
}




@using (Html.BeginForm("EditOperacion", "Facturas", FormMethod.Post, new { @class = "form-horizontal", @id = "mainform" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">


        @{
            ViewData["operacion"] = "Edit";
        }
        @Html.Partial("_Facturas", Model as FacturasModel)

        <div class="margin-top">


            <button class="btn btn-info no-margin-left" type="Submit">
                <i class="ace-icon fa fa-check bigger-110"></i>
                @General.BtnGuardar
            </button>

        </div>

    </div>

            }

@Html.Partial("_envioemails")
@Html.Partial("UsersControls/_ultimoprecioModal")
@Html.Partial("UsersControls/_importarlineasModal")
<script>
    function CallGenerarDevolucion() {
        var values = @Html.Raw(JsonConvert.SerializeObject(modelview.Lineas));
        var columnas = @Html.Raw(JsonConvert.SerializeObject(columns));

        GenerarDevolucion(values, columnas, "@Url.Action("Devolucion","Facturas")","@modelview.Id");
    }
</script>
@Html.Partial("UsersControls/_albarandevolucionModal")

@section GridView
{
    @Html.DevExpress().GetStyleSheets(
    new StyleSheet { ExtensionSuite = ExtensionSuite.GridView }
)
    @Html.DevExpress().GetScripts(
    new Script { ExtensionSuite = ExtensionSuite.GridView }
)

}

